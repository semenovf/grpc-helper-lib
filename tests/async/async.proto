////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2019 Vladislav Trifochkin
//
// This file is part of [pfs-grpc](https://github.com/semenovf/pfs-grpc) library.
////////////////////////////////////////////////////////////////////////////////
syntax = "proto3";

package TestRpc;


service TestService {
    // Simple RPC

    // StartService is defined as macro in winsvc.h, so it was cause compile error
    // in Windows (valid for MSVC 2015 at least)
    rpc Start(StartServiceRequest) returns (ServiceStatus) {}
    rpc Stop(StopService) returns (ServiceStatus) {}
    rpc Finish(FinishService) returns (FinishStatus) {}

    // Server-side streaming RPC
    rpc ListModules(GetListModules) returns (stream ModuleStatus) {}

    // Client-side streaming RPC
    rpc SendSegments(stream Segment) returns (Complete) {}

    // Bidirectional streaming RPC
    rpc StartModules(stream StartModule) returns (stream ModuleStatus) {}
}

// SERVICE_STOPPED is defined as macro in winsvc.h, so it was cause compile error
// in Windows (valid for MSVC 2015 at least)
enum ServiceStatusEnum {
    TEST_SERVICE_STARTED         = 0;
    TEST_SERVICE_STOPPED         = 1;
    TEST_SERVICE_ALREADY_STARTED = 2;
    TEST_SERVICE_START_FAILED    = 3;
}

enum ModuleStatusEnum {
    MODULE_ACTIVATED   = 0;
    MODULE_DEACTIVATED = 1;
}

message FinishService {}
message FinishStatus {}

message StartServiceRequest {}

message StopService {}

message ServiceStatus {
    ServiceStatusEnum status = 2;
}

message GetListModules {}

message ModuleStatus {
    string name = 1;
    ModuleStatusEnum status = 2;
}

message Segment {
    string id   = 1;
    int32 index = 2;
    int32 total = 3;
}

message Complete {
    string id = 1;
    bool complete = 2;
}

message StartModule {
    string name = 1;
}

