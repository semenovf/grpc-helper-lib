################################################################################
# Input variables
#-------------------------------------------------------------------------------
# PROTOBUF_INPUT_DIRECTORY
#       Directory where proto definition files are located
# PROTOBUF_SOURCES
#       Proto definition filenames
#===============================================================================
# Output variables
#-------------------------------------------------------------------------------
# pfs_GRPC_INCLUDE_DIRS
#       include directories for gRPC-specific libraries
# pfs_GRPC_LIBRARY_DIRS
#       Link directories for gRPC-specific libraries
# pfs_GRPC_LIBRARIES
#       gRPC-specific libraries to be linked
# pfs_GRPC_SOURCES
#       Sources generated by Protobuf
################################################################################
set(pfs_PROTOBUF_INPUT_DIRECTORY ${PROTOBUF_INPUT_DIRECTORY})
set(pfs_PROTOC_BIN "${CMAKE_BINARY_DIR}/3rdparty/grpc/third_party/protobuf/protoc")
set(pfs_GRPC_CPP_PLUGIN_PATH "${CMAKE_BINARY_DIR}/3rdparty/grpc/grpc_cpp_plugin")
set(pfs_PROTOBUF_OUTPUT_DIRECTORY "${PROJECT_BINARY_DIR}/proto")

################################################################################
# Protobuf compiler version (informative purpose only)
################################################################################
# execute_process(COMMAND ${pfs_PROTOC_BIN} --version
#     OUTPUT_VARIABLE pfs_PROTOC_VERSION)

################################################################################
# string(STRIP ${pfs_PROTOC_VERSION} pfs_PROTOC_VERSION)

message("
================================================================================
Protobuf compiler : ${pfs_PROTOC_BIN}
gRPC C++ plugin   : ${pfs_GRPC_CPP_PLUGIN_PATH}
Protobuf input dir: ${pfs_PROTOBUF_INPUT_DIRECTORY}
Protobuf ouput dir: ${pfs_PROTOBUF_OUTPUT_DIRECTORY}
================================================================================")

foreach(pfs_proto_src ${PROTOBUF_SOURCES})
    get_filename_component(pfs_proto_basename ${pfs_proto_src} NAME_WE)

    list(APPEND pfs_PROTOBUF_SOURCES "${PROTOBUF_INPUT_DIRECTORY}/${pfs_proto_src}")
    list(APPEND pfs_PROTOBUF_OUTPUT "${pfs_PROTOBUF_OUTPUT_DIRECTORY}/${pfs_proto_basename}.pb.cc")
    list(APPEND pfs_PROTOBUF_OUTPUT "${pfs_PROTOBUF_OUTPUT_DIRECTORY}/${pfs_proto_basename}.pb.h")
    list(APPEND pfs_GRPC_PROTOBUF_OUTPUT "${pfs_PROTOBUF_OUTPUT_DIRECTORY}/${pfs_proto_basename}.grpc.pb.cc")
    list(APPEND pfs_GRPC_PROTOBUF_OUTPUT "${pfs_PROTOBUF_OUTPUT_DIRECTORY}/${pfs_proto_basename}.grpc.pb.h")
    list(APPEND pfs_GRPC_SOURCES "${pfs_PROTOBUF_OUTPUT_DIRECTORY}/${pfs_proto_basename}.pb.cc")
    list(APPEND pfs_GRPC_SOURCES "${pfs_PROTOBUF_OUTPUT_DIRECTORY}/${pfs_proto_basename}.grpc.pb.cc")
endforeach()

################################################################################
# Generate gRPC-specific source codes
################################################################################
add_custom_command(COMMAND ${pfs_PROTOC_BIN}
        --proto_path=\"${pfs_PROTOBUF_INPUT_DIRECTORY}\"
        --grpc_out=\"${pfs_PROTOBUF_OUTPUT_DIRECTORY}\"
        --plugin=protoc-gen-grpc=\"${pfs_GRPC_CPP_PLUGIN_PATH}\"
        ${pfs_PROTOBUF_SOURCES}
    OUTPUT ${pfs_GRPC_PROTOBUF_OUTPUT}
    DEPENDS ${pfs_PROTOBUF_SOURCES})

################################################################################
# Generate Protobuf-specific source codes
################################################################################
add_custom_command(COMMAND ${pfs_PROTOC_BIN}
        --proto_path=\"${pfs_PROTOBUF_INPUT_DIRECTORY}\"
        --cpp_out=\"${pfs_PROTOBUF_OUTPUT_DIRECTORY}\"
        ${pfs_PROTOBUF_SOURCES}
    OUTPUT ${pfs_PROTOBUF_OUTPUT}
    DEPENDS ${pfs_PROTOBUF_SOURCES})

################################################################################
# Output variables initialization
################################################################################
set(pfs_GRPC_INCLUDE_DIRS
    ${CMAKE_SOURCE_DIR}/3rdparty/grpc/include
    ${CMAKE_SOURCE_DIR}/3rdparty/grpc/third_party/protobuf/src
    ${pfs_PROTOBUF_OUTPUT_DIRECTORY})

set(pfs_GRPC_LIBRARY_DIRS
#     ${CMAKE_BINARY_DIR}/3rdparty/grpc
#     ${CMAKE_BINARY_DIR}/3rdparty/grpc/third_party/cares/cares/lib
#     ${CMAKE_BINARY_DIR}/3rdparty/grpc/third_party/protobuf
#     ${CMAKE_BINARY_DIR}/3rdparty/grpc/third_party/zlib
)

set(pfs_GRPC_LIBRARIES
#     grpc++_reflection
    grpc++
#     grpc
#     gpr
#     address_sorting
#     cares
#     protobuf
#    z
)

